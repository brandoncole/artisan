// Code generated by protoc-gen-go.
// source: territory.proto
// DO NOT EDIT!

package northwind

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/brandoncole/artisan/artisan"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Territory struct {
	Id          string    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Description string    `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Region      *RegionFK `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
}

func (m *Territory) Reset()                    { *m = Territory{} }
func (m *Territory) String() string            { return proto.CompactTextString(m) }
func (*Territory) ProtoMessage()               {}
func (*Territory) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *Territory) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Territory) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Territory) GetRegion() *RegionFK {
	if m != nil {
		return m.Region
	}
	return nil
}

func init() {
	proto.RegisterType((*Territory)(nil), "northwind.Territory")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Territories service

type TerritoriesClient interface {
}

type territoriesClient struct {
	cc *grpc.ClientConn
}

func NewTerritoriesClient(cc *grpc.ClientConn) TerritoriesClient {
	return &territoriesClient{cc}
}

// Server API for Territories service

type TerritoriesServer interface {
}

func RegisterTerritoriesServer(s *grpc.Server, srv TerritoriesServer) {
	s.RegisterService(&_Territories_serviceDesc, srv)
}

var _Territories_serviceDesc = grpc.ServiceDesc{
	ServiceName: "northwind.Territories",
	HandlerType: (*TerritoriesServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "territory.proto",
}

func init() { proto.RegisterFile("territory.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x49, 0x2d, 0x2a,
	0xca, 0x2c, 0xc9, 0x2f, 0xaa, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcc, 0xcb, 0x2f,
	0x2a, 0xc9, 0x28, 0xcf, 0xcc, 0x4b, 0x91, 0x12, 0x4d, 0x2c, 0x2a, 0xc9, 0x2c, 0x4e, 0xcc, 0xd3,
	0x87, 0xd2, 0x10, 0x15, 0x52, 0x3c, 0x45, 0xa9, 0xe9, 0x99, 0xf9, 0x50, 0x9e, 0x52, 0x01, 0x17,
	0x67, 0x08, 0xcc, 0x08, 0x21, 0x11, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x4e,
	0x27, 0x96, 0x86, 0xad, 0x12, 0x8c, 0x41, 0x4c, 0x99, 0x29, 0x42, 0x0a, 0x5c, 0xdc, 0x29, 0xa9,
	0xc5, 0xc9, 0x45, 0x99, 0x05, 0x25, 0x99, 0xf9, 0x79, 0x12, 0x4c, 0x20, 0xe9, 0x20, 0x64, 0x21,
	0x21, 0x6d, 0x2e, 0x36, 0x88, 0xa1, 0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0xc2, 0x7a, 0x70,
	0x57, 0xe8, 0x05, 0x81, 0x25, 0xdc, 0xbc, 0x83, 0xa0, 0x4a, 0x8c, 0x54, 0xb8, 0xb8, 0x61, 0x36,
	0x66, 0xa6, 0x16, 0x4b, 0x89, 0x1e, 0x7a, 0x22, 0x2b, 0x08, 0x73, 0x21, 0xdc, 0x29, 0x49, 0x6c,
	0x60, 0xe7, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xf6, 0xc3, 0xf1, 0x90, 0xe1, 0x00, 0x00,
	0x00,
}
