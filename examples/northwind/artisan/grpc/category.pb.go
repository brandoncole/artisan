// Code generated by protoc-gen-go.
// source: category.proto
// DO NOT EDIT!

/*
Package northwind is a generated protocol buffer package.

It is generated from these files:
	category.proto
	customer.proto
	employee.proto
	image.proto
	order.proto
	product.proto
	region.proto
	shipper.proto
	supplier.proto
	territory.proto

It has these top-level messages:
	Category
	CategoryFK
	Customer
	CustomerFK
	Employee
	EmployeeFK
	Image
	ImageFK
	Order
	OrderItem
	Product
	Region
	RegionFK
	Shipper
	ShipperFK
	Supplier
	SupplierFK
	Territory
*/
package northwind

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/brandoncole/artisan/artisan"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Category struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Image       *Image `protobuf:"bytes,4,opt,name=image" json:"image,omitempty"`
}

func (m *Category) Reset()                    { *m = Category{} }
func (m *Category) String() string            { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()               {}
func (*Category) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Category) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Category) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Category) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type CategoryFK struct {
	// Types that are valid to be assigned to Category:
	//	*CategoryFK_Id
	//	*CategoryFK_Instance
	Category isCategoryFK_Category `protobuf_oneof:"category"`
}

func (m *CategoryFK) Reset()                    { *m = CategoryFK{} }
func (m *CategoryFK) String() string            { return proto.CompactTextString(m) }
func (*CategoryFK) ProtoMessage()               {}
func (*CategoryFK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isCategoryFK_Category interface {
	isCategoryFK_Category()
}

type CategoryFK_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,oneof"`
}
type CategoryFK_Instance struct {
	Instance *Category `protobuf:"bytes,2,opt,name=instance,oneof"`
}

func (*CategoryFK_Id) isCategoryFK_Category()       {}
func (*CategoryFK_Instance) isCategoryFK_Category() {}

func (m *CategoryFK) GetCategory() isCategoryFK_Category {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *CategoryFK) GetId() string {
	if x, ok := m.GetCategory().(*CategoryFK_Id); ok {
		return x.Id
	}
	return ""
}

func (m *CategoryFK) GetInstance() *Category {
	if x, ok := m.GetCategory().(*CategoryFK_Instance); ok {
		return x.Instance
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CategoryFK) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CategoryFK_OneofMarshaler, _CategoryFK_OneofUnmarshaler, _CategoryFK_OneofSizer, []interface{}{
		(*CategoryFK_Id)(nil),
		(*CategoryFK_Instance)(nil),
	}
}

func _CategoryFK_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CategoryFK)
	// category
	switch x := m.Category.(type) {
	case *CategoryFK_Id:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *CategoryFK_Instance:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instance); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CategoryFK.Category has unexpected type %T", x)
	}
	return nil
}

func _CategoryFK_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CategoryFK)
	switch tag {
	case 1: // category.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Category = &CategoryFK_Id{x}
		return true, err
	case 2: // category.instance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Category)
		err := b.DecodeMessage(msg)
		m.Category = &CategoryFK_Instance{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CategoryFK_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CategoryFK)
	// category
	switch x := m.Category.(type) {
	case *CategoryFK_Id:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *CategoryFK_Instance:
		s := proto.Size(x.Instance)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Category)(nil), "northwind.Category")
	proto.RegisterType((*CategoryFK)(nil), "northwind.CategoryFK")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Categories service

type CategoriesClient interface {
}

type categoriesClient struct {
	cc *grpc.ClientConn
}

func NewCategoriesClient(cc *grpc.ClientConn) CategoriesClient {
	return &categoriesClient{cc}
}

// Server API for Categories service

type CategoriesServer interface {
}

func RegisterCategoriesServer(s *grpc.Server, srv CategoriesServer) {
	s.RegisterService(&_Categories_serviceDesc, srv)
}

var _Categories_serviceDesc = grpc.ServiceDesc{
	ServiceName: "northwind.Categories",
	HandlerType: (*CategoriesServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "category.proto",
}

func init() { proto.RegisterFile("category.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x4e, 0x2c, 0x49,
	0x4d, 0xcf, 0x2f, 0xaa, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcc, 0xcb, 0x2f, 0x2a,
	0xc9, 0x28, 0xcf, 0xcc, 0x4b, 0x91, 0x12, 0x4d, 0x2c, 0x2a, 0xc9, 0x2c, 0x4e, 0xcc, 0xd3, 0x87,
	0xd2, 0x10, 0x15, 0x52, 0xdc, 0x99, 0xb9, 0x89, 0xe9, 0xa9, 0x10, 0x8e, 0x52, 0x0b, 0x23, 0x17,
	0x87, 0x33, 0xd4, 0x04, 0x21, 0x11, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x4e,
	0x27, 0x96, 0x86, 0xad, 0x12, 0x8c, 0x41, 0x4c, 0x99, 0x29, 0x42, 0x12, 0x5c, 0x2c, 0x79, 0x89,
	0xb9, 0xa9, 0x12, 0x4c, 0x10, 0xf1, 0x0e, 0x90, 0x38, 0x58, 0x44, 0x48, 0x81, 0x8b, 0x3b, 0x25,
	0xb5, 0x38, 0xb9, 0x28, 0xb3, 0xa0, 0x24, 0x33, 0x3f, 0x4f, 0x82, 0x19, 0xa4, 0x20, 0x08, 0x59,
	0x48, 0x48, 0x8d, 0x8b, 0x15, 0x6c, 0x9b, 0x04, 0x8b, 0x02, 0xa3, 0x06, 0xb7, 0x91, 0x80, 0x1e,
	0xdc, 0x75, 0x7a, 0x9e, 0x20, 0xf1, 0x20, 0x88, 0xb4, 0x52, 0x2c, 0x17, 0x17, 0xcc, 0x15, 0x6e,
	0xde, 0x42, 0x02, 0x08, 0x77, 0x78, 0x30, 0x80, 0xdd, 0x60, 0xc8, 0xc5, 0x91, 0x99, 0x57, 0x5c,
	0x92, 0x98, 0x97, 0x0c, 0x71, 0x07, 0xb7, 0x91, 0x30, 0x92, 0x51, 0x30, 0xad, 0x1e, 0x0c, 0x41,
	0x70, 0x65, 0x4e, 0x5c, 0x5c, 0x1c, 0xb0, 0xa0, 0x31, 0x52, 0x82, 0x1b, 0x9f, 0x99, 0x5a, 0x2c,
	0x25, 0x72, 0xe8, 0x89, 0xac, 0x00, 0x2c, 0x4c, 0x60, 0x7a, 0x93, 0xd8, 0xc0, 0x01, 0x62, 0x0c,
	0x08, 0x00, 0x00, 0xff, 0xff, 0xa6, 0xca, 0xde, 0xa7, 0x51, 0x01, 0x00, 0x00,
}
