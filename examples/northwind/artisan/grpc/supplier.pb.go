// Code generated by protoc-gen-go.
// source: supplier.proto
// DO NOT EDIT!

package northwind

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/brandoncole/artisan/artisan"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Supplier struct {
	Id           string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ContactName  string `protobuf:"bytes,3,opt,name=contact_name,json=contactName" json:"contact_name,omitempty"`
	ContactTitle string `protobuf:"bytes,4,opt,name=contact_title,json=contactTitle" json:"contact_title,omitempty"`
	Address      string `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	City         string `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
	Region       string `protobuf:"bytes,7,opt,name=region" json:"region,omitempty"`
	PostalCode   string `protobuf:"bytes,8,opt,name=postal_code,json=postalCode" json:"postal_code,omitempty"`
	Country      string `protobuf:"bytes,9,opt,name=country" json:"country,omitempty"`
	Phone        string `protobuf:"bytes,10,opt,name=phone" json:"phone,omitempty"`
	Fax          string `protobuf:"bytes,11,opt,name=fax" json:"fax,omitempty"`
	Website      string `protobuf:"bytes,12,opt,name=website" json:"website,omitempty"`
	Email        string `protobuf:"bytes,13,opt,name=email" json:"email,omitempty"`
}

func (m *Supplier) Reset()                    { *m = Supplier{} }
func (m *Supplier) String() string            { return proto.CompactTextString(m) }
func (*Supplier) ProtoMessage()               {}
func (*Supplier) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *Supplier) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Supplier) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Supplier) GetContactName() string {
	if m != nil {
		return m.ContactName
	}
	return ""
}

func (m *Supplier) GetContactTitle() string {
	if m != nil {
		return m.ContactTitle
	}
	return ""
}

func (m *Supplier) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Supplier) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Supplier) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Supplier) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Supplier) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Supplier) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Supplier) GetFax() string {
	if m != nil {
		return m.Fax
	}
	return ""
}

func (m *Supplier) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *Supplier) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type SupplierFK struct {
	// Types that are valid to be assigned to Supplier:
	//	*SupplierFK_Id
	//	*SupplierFK_Instance
	Supplier isSupplierFK_Supplier `protobuf_oneof:"supplier"`
}

func (m *SupplierFK) Reset()                    { *m = SupplierFK{} }
func (m *SupplierFK) String() string            { return proto.CompactTextString(m) }
func (*SupplierFK) ProtoMessage()               {}
func (*SupplierFK) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

type isSupplierFK_Supplier interface {
	isSupplierFK_Supplier()
}

type SupplierFK_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,oneof"`
}
type SupplierFK_Instance struct {
	Instance *Supplier `protobuf:"bytes,2,opt,name=instance,oneof"`
}

func (*SupplierFK_Id) isSupplierFK_Supplier()       {}
func (*SupplierFK_Instance) isSupplierFK_Supplier() {}

func (m *SupplierFK) GetSupplier() isSupplierFK_Supplier {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *SupplierFK) GetId() string {
	if x, ok := m.GetSupplier().(*SupplierFK_Id); ok {
		return x.Id
	}
	return ""
}

func (m *SupplierFK) GetInstance() *Supplier {
	if x, ok := m.GetSupplier().(*SupplierFK_Instance); ok {
		return x.Instance
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SupplierFK) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SupplierFK_OneofMarshaler, _SupplierFK_OneofUnmarshaler, _SupplierFK_OneofSizer, []interface{}{
		(*SupplierFK_Id)(nil),
		(*SupplierFK_Instance)(nil),
	}
}

func _SupplierFK_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SupplierFK)
	// supplier
	switch x := m.Supplier.(type) {
	case *SupplierFK_Id:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *SupplierFK_Instance:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instance); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SupplierFK.Supplier has unexpected type %T", x)
	}
	return nil
}

func _SupplierFK_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SupplierFK)
	switch tag {
	case 1: // supplier.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Supplier = &SupplierFK_Id{x}
		return true, err
	case 2: // supplier.instance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Supplier)
		err := b.DecodeMessage(msg)
		m.Supplier = &SupplierFK_Instance{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SupplierFK_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SupplierFK)
	// supplier
	switch x := m.Supplier.(type) {
	case *SupplierFK_Id:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *SupplierFK_Instance:
		s := proto.Size(x.Instance)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Supplier)(nil), "northwind.Supplier")
	proto.RegisterType((*SupplierFK)(nil), "northwind.SupplierFK")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Suppliers service

type SuppliersClient interface {
}

type suppliersClient struct {
	cc *grpc.ClientConn
}

func NewSuppliersClient(cc *grpc.ClientConn) SuppliersClient {
	return &suppliersClient{cc}
}

// Server API for Suppliers service

type SuppliersServer interface {
}

func RegisterSuppliersServer(s *grpc.Server, srv SuppliersServer) {
	s.RegisterService(&_Suppliers_serviceDesc, srv)
}

var _Suppliers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "northwind.Suppliers",
	HandlerType: (*SuppliersServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "supplier.proto",
}

func init() { proto.RegisterFile("supplier.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xcf, 0x6a, 0xe3, 0x30,
	0x10, 0xc6, 0x63, 0xe7, 0x9f, 0x3d, 0x4e, 0x96, 0xa0, 0xcd, 0x86, 0x21, 0xb0, 0x7f, 0x92, 0xbd,
	0xec, 0x29, 0xcb, 0x66, 0xdf, 0x20, 0x85, 0x12, 0x28, 0xf4, 0xe0, 0xf6, 0x5a, 0x82, 0x62, 0xab,
	0x8d, 0xc0, 0x91, 0x8c, 0xa5, 0x90, 0xe6, 0xd6, 0x97, 0xea, 0xbd, 0xf4, 0xd4, 0xc7, 0xe8, 0xa1,
	0xd7, 0x9e, 0xfa, 0x02, 0x45, 0x92, 0x95, 0xf6, 0x64, 0xcd, 0xef, 0xfb, 0x66, 0x06, 0xcf, 0x07,
	0x5f, 0xd4, 0xae, 0x2c, 0x0b, 0xce, 0xaa, 0x59, 0x59, 0x49, 0x2d, 0x49, 0x2c, 0x64, 0xa5, 0x37,
	0x7b, 0x2e, 0xf2, 0xf1, 0x37, 0x5a, 0x69, 0xae, 0xa8, 0xf8, 0x5b, 0x7f, 0x9d, 0x63, 0xfa, 0x1a,
	0x42, 0x74, 0x51, 0x37, 0x91, 0x21, 0x84, 0x3c, 0xc7, 0xe0, 0x57, 0xf0, 0x27, 0x5e, 0xb4, 0xee,
	0xee, 0x31, 0x48, 0x43, 0x9e, 0x13, 0x02, 0x2d, 0x41, 0xb7, 0x0c, 0x43, 0xc3, 0x53, 0xfb, 0x26,
	0x13, 0xe8, 0x65, 0x52, 0x68, 0x9a, 0xe9, 0x95, 0xd5, 0x9a, 0x56, 0x4b, 0x6a, 0x76, 0x6e, 0x2c,
	0xbf, 0xa1, 0xef, 0x2d, 0x9a, 0xeb, 0x82, 0x61, 0xcb, 0x7a, 0x7c, 0xdf, 0xa5, 0x61, 0x04, 0xa1,
	0x4b, 0xf3, 0xbc, 0x62, 0x4a, 0x61, 0xdb, 0xca, 0xbe, 0x34, 0x5b, 0x33, 0xae, 0x0f, 0xd8, 0x71,
	0x5b, 0xcd, 0x9b, 0x8c, 0xa0, 0x53, 0xb1, 0x1b, 0x2e, 0x05, 0x76, 0x2d, 0xad, 0x2b, 0xf2, 0x13,
	0x92, 0x52, 0x2a, 0x4d, 0x8b, 0x55, 0x26, 0x73, 0x86, 0x91, 0x15, 0xc1, 0xa1, 0x13, 0x99, 0xdb,
	0x35, 0x99, 0xdc, 0x09, 0x5d, 0x1d, 0x30, 0x76, 0x6b, 0xea, 0x92, 0x8c, 0xa1, 0x5d, 0x6e, 0xa4,
	0x60, 0x08, 0xee, 0xaf, 0x9f, 0xdf, 0x30, 0x48, 0x1d, 0x22, 0x23, 0x68, 0x5e, 0xd3, 0x5b, 0x4c,
	0x3e, 0x29, 0x06, 0x90, 0x1f, 0xd0, 0xdd, 0xb3, 0xb5, 0xe2, 0x9a, 0x61, 0xcf, 0x69, 0x4f, 0x46,
	0xf3, 0xd0, 0xcc, 0x64, 0x5b, 0xca, 0x0b, 0xec, 0x3b, 0xf5, 0xc1, 0xce, 0xb4, 0x68, 0x7a, 0x05,
	0xe0, 0xcf, 0x7d, 0x7a, 0x46, 0x06, 0x1f, 0x07, 0x5f, 0x36, 0xec, 0xb1, 0xff, 0x41, 0xc4, 0x85,
	0xd2, 0x54, 0x64, 0xee, 0xe0, 0xc9, 0xfc, 0xeb, 0xec, 0x18, 0xe2, 0xcc, 0xb7, 0x2e, 0x1b, 0xe9,
	0xd1, 0xb6, 0x00, 0x88, 0x7c, 0xec, 0xf3, 0x09, 0xc4, 0xde, 0xa3, 0xc6, 0xc3, 0xc7, 0x97, 0xef,
	0x03, 0x1f, 0xb7, 0xc7, 0xeb, 0x8e, 0x0d, 0xfe, 0xff, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5a,
	0xf6, 0xb7, 0xbf, 0x2c, 0x02, 0x00, 0x00,
}
