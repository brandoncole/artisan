// Code generated by protoc-gen-go.
// source: customer.proto
// DO NOT EDIT!

package northwind

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/brandoncole/artisan/artisan"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Customer struct {
	Id           string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ContactName  string `protobuf:"bytes,3,opt,name=contact_name,json=contactName" json:"contact_name,omitempty"`
	ContactTitle string `protobuf:"bytes,4,opt,name=contact_title,json=contactTitle" json:"contact_title,omitempty"`
	Address      string `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	City         string `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
	Region       string `protobuf:"bytes,7,opt,name=region" json:"region,omitempty"`
	PostalCode   string `protobuf:"bytes,8,opt,name=postal_code,json=postalCode" json:"postal_code,omitempty"`
	Country      string `protobuf:"bytes,9,opt,name=country" json:"country,omitempty"`
	Phone        string `protobuf:"bytes,10,opt,name=phone" json:"phone,omitempty"`
	Fax          string `protobuf:"bytes,11,opt,name=fax" json:"fax,omitempty"`
	Email        string `protobuf:"bytes,12,opt,name=email" json:"email,omitempty"`
}

func (m *Customer) Reset()                    { *m = Customer{} }
func (m *Customer) String() string            { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()               {}
func (*Customer) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Customer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Customer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Customer) GetContactName() string {
	if m != nil {
		return m.ContactName
	}
	return ""
}

func (m *Customer) GetContactTitle() string {
	if m != nil {
		return m.ContactTitle
	}
	return ""
}

func (m *Customer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Customer) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Customer) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Customer) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Customer) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Customer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Customer) GetFax() string {
	if m != nil {
		return m.Fax
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CustomerFK struct {
	// Types that are valid to be assigned to Customer:
	//	*CustomerFK_Id
	//	*CustomerFK_Instance
	Customer isCustomerFK_Customer `protobuf_oneof:"customer"`
}

func (m *CustomerFK) Reset()                    { *m = CustomerFK{} }
func (m *CustomerFK) String() string            { return proto.CompactTextString(m) }
func (*CustomerFK) ProtoMessage()               {}
func (*CustomerFK) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

type isCustomerFK_Customer interface {
	isCustomerFK_Customer()
}

type CustomerFK_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,oneof"`
}
type CustomerFK_Instance struct {
	Instance *Customer `protobuf:"bytes,2,opt,name=instance,oneof"`
}

func (*CustomerFK_Id) isCustomerFK_Customer()       {}
func (*CustomerFK_Instance) isCustomerFK_Customer() {}

func (m *CustomerFK) GetCustomer() isCustomerFK_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *CustomerFK) GetId() string {
	if x, ok := m.GetCustomer().(*CustomerFK_Id); ok {
		return x.Id
	}
	return ""
}

func (m *CustomerFK) GetInstance() *Customer {
	if x, ok := m.GetCustomer().(*CustomerFK_Instance); ok {
		return x.Instance
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CustomerFK) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CustomerFK_OneofMarshaler, _CustomerFK_OneofUnmarshaler, _CustomerFK_OneofSizer, []interface{}{
		(*CustomerFK_Id)(nil),
		(*CustomerFK_Instance)(nil),
	}
}

func _CustomerFK_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CustomerFK)
	// customer
	switch x := m.Customer.(type) {
	case *CustomerFK_Id:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *CustomerFK_Instance:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instance); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CustomerFK.Customer has unexpected type %T", x)
	}
	return nil
}

func _CustomerFK_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CustomerFK)
	switch tag {
	case 1: // customer.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Customer = &CustomerFK_Id{x}
		return true, err
	case 2: // customer.instance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Customer)
		err := b.DecodeMessage(msg)
		m.Customer = &CustomerFK_Instance{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CustomerFK_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CustomerFK)
	// customer
	switch x := m.Customer.(type) {
	case *CustomerFK_Id:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *CustomerFK_Instance:
		s := proto.Size(x.Instance)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Customer)(nil), "northwind.Customer")
	proto.RegisterType((*CustomerFK)(nil), "northwind.CustomerFK")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Customers service

type CustomersClient interface {
}

type customersClient struct {
	cc *grpc.ClientConn
}

func NewCustomersClient(cc *grpc.ClientConn) CustomersClient {
	return &customersClient{cc}
}

// Server API for Customers service

type CustomersServer interface {
}

func RegisterCustomersServer(s *grpc.Server, srv CustomersServer) {
	s.RegisterService(&_Customers_serviceDesc, srv)
}

var _Customers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "northwind.Customers",
	HandlerType: (*CustomersServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "customer.proto",
}

func init() { proto.RegisterFile("customer.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xcf, 0x4a, 0xeb, 0x40,
	0x14, 0xc6, 0x9b, 0xf4, 0x5f, 0x72, 0xd2, 0x7b, 0x29, 0x73, 0x7b, 0xe5, 0x50, 0x54, 0xb4, 0x22,
	0xba, 0xaa, 0x58, 0xdf, 0xa0, 0x05, 0x29, 0x08, 0x2e, 0x82, 0x5b, 0x29, 0x63, 0x32, 0xda, 0x81,
	0x76, 0xa6, 0x64, 0xa6, 0x68, 0x77, 0x2e, 0x7d, 0x21, 0xf7, 0xe2, 0x93, 0xb8, 0xf0, 0x05, 0xc4,
	0x17, 0x90, 0x99, 0xc9, 0xd4, 0xac, 0x42, 0x7e, 0xdf, 0xef, 0x83, 0xe1, 0x7c, 0xf0, 0x37, 0x5b,
	0x2b, 0x2d, 0x97, 0xac, 0x18, 0xae, 0x0a, 0xa9, 0x25, 0x89, 0x85, 0x2c, 0xf4, 0xfc, 0x91, 0x8b,
	0xbc, 0xff, 0x9f, 0x16, 0x9a, 0x2b, 0x2a, 0xce, 0xca, 0xaf, 0x33, 0x06, 0x5f, 0x21, 0x44, 0x93,
	0xb2, 0x44, 0x7a, 0x10, 0xf2, 0x1c, 0x83, 0x83, 0xe0, 0x34, 0x1e, 0x37, 0x9e, 0x5f, 0x31, 0x48,
	0x43, 0x9e, 0x13, 0x84, 0x86, 0xa0, 0x4b, 0x86, 0xa1, 0xe3, 0x2f, 0x86, 0x5b, 0x42, 0x4e, 0xa0,
	0x93, 0x49, 0xa1, 0x69, 0xa6, 0x67, 0xd6, 0xa8, 0x57, 0x8c, 0xa4, 0x4c, 0xae, 0x8d, 0x78, 0x04,
	0x7f, 0xbc, 0xa8, 0xb9, 0x5e, 0x30, 0x6c, 0x18, 0x33, 0xf5, 0xed, 0x1b, 0xc3, 0x08, 0x42, 0x9b,
	0xe6, 0x79, 0xc1, 0x94, 0xc2, 0xa6, 0x8d, 0xfd, 0xaf, 0x79, 0x41, 0xc6, 0xf5, 0x06, 0x5b, 0xd5,
	0x17, 0x18, 0x42, 0x76, 0xa1, 0x55, 0xb0, 0x07, 0x2e, 0x05, 0xb6, 0x2b, 0x59, 0xc9, 0xc8, 0x31,
	0x24, 0x2b, 0xa9, 0x34, 0x5d, 0xcc, 0x32, 0x99, 0x33, 0x8c, 0x2a, 0x0a, 0xb8, 0x60, 0x22, 0x73,
	0x46, 0xf6, 0xa1, 0x9d, 0xc9, 0xb5, 0xd0, 0xc5, 0x06, 0xe3, 0x8a, 0xe2, 0x21, 0xe9, 0x43, 0x73,
	0x35, 0x97, 0x82, 0x21, 0xb8, 0xf4, 0xe3, 0x1b, 0x83, 0xd4, 0x21, 0xb2, 0x03, 0xf5, 0x7b, 0xfa,
	0x84, 0x49, 0x25, 0x31, 0xc0, 0x74, 0xd8, 0x92, 0xf2, 0x05, 0x76, 0x5c, 0xf2, 0x66, 0x3b, 0x16,
	0x0d, 0x6e, 0x01, 0xfc, 0xc9, 0x2f, 0xaf, 0x48, 0xf7, 0xf7, 0xe8, 0xd3, 0x9a, 0x3d, 0xf8, 0x39,
	0x44, 0x5c, 0x28, 0x4d, 0x45, 0xe6, 0x8e, 0x9e, 0x8c, 0xfe, 0x0d, 0xb7, 0x43, 0x0e, 0x7d, 0x75,
	0x5a, 0x4b, 0xb7, 0xda, 0x18, 0x20, 0xf2, 0xd3, 0x8f, 0x0e, 0x21, 0xf6, 0x8e, 0xea, 0xf7, 0xde,
	0x3f, 0xf7, 0xba, 0x7e, 0x72, 0x8f, 0xef, 0x5a, 0x76, 0xfc, 0x8b, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x73, 0x0b, 0x81, 0xad, 0x30, 0x02, 0x00, 0x00,
}
