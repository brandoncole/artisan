// Code generated by protoc-gen-go.
// source: employee.proto
// DO NOT EDIT!

package northwind

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "artisan"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Employee struct {
	Id              string       `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	LastName        string       `protobuf:"bytes,2,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	FirstName       string       `protobuf:"bytes,3,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	Title           string       `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	TitleOfCourtesy string       `protobuf:"bytes,5,opt,name=title_of_courtesy,json=titleOfCourtesy" json:"title_of_courtesy,omitempty"`
	BirthDate       string       `protobuf:"bytes,6,opt,name=birth_date,json=birthDate" json:"birth_date,omitempty"`
	HireDate        string       `protobuf:"bytes,7,opt,name=hire_date,json=hireDate" json:"hire_date,omitempty"`
	Address         string       `protobuf:"bytes,8,opt,name=address" json:"address,omitempty"`
	City            string       `protobuf:"bytes,9,opt,name=city" json:"city,omitempty"`
	Region          *Region      `protobuf:"bytes,10,opt,name=region" json:"region,omitempty"`
	PostalCode      string       `protobuf:"bytes,11,opt,name=postal_code,json=postalCode" json:"postal_code,omitempty"`
	Country         string       `protobuf:"bytes,12,opt,name=country" json:"country,omitempty"`
	Phone           string       `protobuf:"bytes,13,opt,name=phone" json:"phone,omitempty"`
	Extension       string       `protobuf:"bytes,14,opt,name=extension" json:"extension,omitempty"`
	Photo           *Image       `protobuf:"bytes,15,opt,name=photo" json:"photo,omitempty"`
	Notes           string       `protobuf:"bytes,16,opt,name=notes" json:"notes,omitempty"`
	ReportsTo       *Employee    `protobuf:"bytes,17,opt,name=reports_to,json=reportsTo" json:"reports_to,omitempty"`
	Territories     []*Territory `protobuf:"bytes,18,rep,name=territories" json:"territories,omitempty"`
}

func (m *Employee) Reset()                    { *m = Employee{} }
func (m *Employee) String() string            { return proto.CompactTextString(m) }
func (*Employee) ProtoMessage()               {}
func (*Employee) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Employee) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Employee) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Employee) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Employee) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Employee) GetTitleOfCourtesy() string {
	if m != nil {
		return m.TitleOfCourtesy
	}
	return ""
}

func (m *Employee) GetBirthDate() string {
	if m != nil {
		return m.BirthDate
	}
	return ""
}

func (m *Employee) GetHireDate() string {
	if m != nil {
		return m.HireDate
	}
	return ""
}

func (m *Employee) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Employee) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Employee) GetRegion() *Region {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *Employee) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Employee) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Employee) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Employee) GetExtension() string {
	if m != nil {
		return m.Extension
	}
	return ""
}

func (m *Employee) GetPhoto() *Image {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *Employee) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *Employee) GetReportsTo() *Employee {
	if m != nil {
		return m.ReportsTo
	}
	return nil
}

func (m *Employee) GetTerritories() []*Territory {
	if m != nil {
		return m.Territories
	}
	return nil
}

func init() {
	proto.RegisterType((*Employee)(nil), "northwind.Employee")
}

func init() { proto.RegisterFile("employee.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 425 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x92, 0x51, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0x95, 0x34, 0x49, 0xe3, 0x71, 0x49, 0x9a, 0xa5, 0x48, 0xa3, 0x00, 0x22, 0x80, 0x84,
	0x02, 0x0f, 0x41, 0x0a, 0x12, 0x07, 0xa0, 0xf0, 0xc0, 0x0b, 0x48, 0x56, 0xdf, 0xad, 0x6d, 0x3c,
	0x69, 0x56, 0x4a, 0x3c, 0xd6, 0xee, 0x54, 0xe0, 0x5b, 0x70, 0x0c, 0x2e, 0xc0, 0x5d, 0x38, 0x4e,
	0xe5, 0x59, 0xbb, 0xf2, 0x93, 0x77, 0xbe, 0xff, 0xdf, 0x9d, 0xd1, 0xef, 0x81, 0x19, 0x9d, 0xaa,
	0x23, 0xd7, 0x44, 0x9b, 0xca, 0xb3, 0xb0, 0x49, 0x4a, 0xf6, 0x72, 0xf8, 0xe5, 0xca, 0x62, 0xf9,
	0xcc, 0x7a, 0x71, 0xc1, 0x96, 0x1f, 0xdb, 0x6f, 0x74, 0x2c, 0x53, 0x77, 0xb2, 0x77, 0xad, 0x7d,
	0x79, 0xe1, 0xe9, 0xce, 0x71, 0x27, 0xcd, 0x85, 0xbc, 0x77, 0xc2, 0xbe, 0x8e, 0xe0, 0xcd, 0xff,
	0x11, 0x4c, 0xbf, 0xb5, 0x0d, 0xcc, 0x0c, 0x86, 0xae, 0xc0, 0xc1, 0x6a, 0xb0, 0x4e, 0xb2, 0xa1,
	0x2b, 0xcc, 0x73, 0x48, 0x8e, 0x36, 0x48, 0x5e, 0xda, 0x13, 0xe1, 0x50, 0xf1, 0xb4, 0x01, 0x3f,
	0xec, 0x89, 0xcc, 0x4b, 0x80, 0xbd, 0xf3, 0x9d, 0x7a, 0xa6, 0x6a, 0xa2, 0x44, 0xe5, 0x2b, 0x18,
	0x8b, 0x93, 0x23, 0xe1, 0x48, 0x95, 0x58, 0x98, 0x0f, 0xb0, 0xd0, 0x43, 0xce, 0xfb, 0x7c, 0xc7,
	0xf7, 0x5e, 0x28, 0xd4, 0x38, 0x56, 0xc7, 0x5c, 0x85, 0x9f, 0xfb, 0xeb, 0x16, 0x9b, 0xb7, 0x00,
	0xb7, 0xce, 0xcb, 0x21, 0x2f, 0xac, 0x10, 0x4e, 0x1a, 0xd3, 0x97, 0xd1, 0x9f, 0x7f, 0x38, 0xc8,
	0x12, 0xe5, 0x5f, 0xad, 0x90, 0x79, 0x0d, 0xc9, 0xc1, 0x79, 0x8a, 0x9e, 0xf3, 0x9e, 0x67, 0xda,
	0x60, 0xb5, 0x20, 0x9c, 0xdb, 0xa2, 0xf0, 0x14, 0x02, 0x4e, 0xb5, 0x53, 0x57, 0x1a, 0x03, 0xa3,
	0x9d, 0x93, 0x1a, 0x13, 0xc5, 0x7a, 0x36, 0xef, 0x61, 0x12, 0x13, 0x43, 0x58, 0x0d, 0xd6, 0xe9,
	0x76, 0xb1, 0x79, 0xcc, 0x7b, 0x93, 0xa9, 0x90, 0xb5, 0x06, 0xf3, 0x0a, 0xd2, 0x8a, 0x83, 0xd8,
	0x63, 0xbe, 0xe3, 0x82, 0x30, 0xd5, 0x57, 0x20, 0xa2, 0x6b, 0x2e, 0xb4, 0xf3, 0x8e, 0xef, 0x4b,
	0xf1, 0x35, 0x5e, 0xc4, 0xce, 0x6d, 0x69, 0x96, 0x30, 0xae, 0x0e, 0x5c, 0x12, 0x3e, 0x89, 0x23,
	0xff, 0x6d, 0x46, 0x8e, 0xc8, 0xbc, 0x80, 0x84, 0x7e, 0x0b, 0x95, 0xa1, 0x19, 0x62, 0x16, 0x73,
	0x7d, 0x04, 0xe6, 0x9d, 0xde, 0x14, 0xc6, 0xb9, 0x8e, 0x77, 0xd9, 0x1b, 0xef, 0x7b, 0xf3, 0xdb,
	0xb3, 0x28, 0x37, 0xf9, 0x97, 0x2c, 0x14, 0xf0, 0x32, 0xe6, 0xaf, 0x85, 0xd9, 0x02, 0x78, 0xaa,
	0xd8, 0x4b, 0xc8, 0x85, 0x71, 0xa1, 0x4f, 0x3c, 0xed, 0x3d, 0xd1, 0xad, 0x42, 0x96, 0xb4, 0xb6,
	0x1b, 0x36, 0x9f, 0x21, 0xed, 0xb6, 0xc6, 0x51, 0x40, 0xb3, 0x3a, 0x5b, 0xa7, 0xdb, 0xab, 0xde,
	0xa5, 0x9b, 0x6e, 0xa7, 0xb2, 0xbe, 0xf1, 0x76, 0xa2, 0x1b, 0xf6, 0xe9, 0x21, 0x00, 0x00, 0xff,
	0xff, 0x65, 0xaa, 0x74, 0x12, 0xc1, 0x02, 0x00, 0x00,
}
