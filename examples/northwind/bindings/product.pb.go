// Code generated by protoc-gen-go.
// source: product.proto
// DO NOT EDIT!

package northwind

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "artisan"
import northwind1 "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Product struct {
	Id              string               `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name            string               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Supplier        *Supplier            `protobuf:"bytes,3,opt,name=supplier" json:"supplier,omitempty"`
	Category        *northwind1.Category `protobuf:"bytes,4,opt,name=category" json:"category,omitempty"`
	QuantityPerUnit string               `protobuf:"bytes,5,opt,name=quantity_per_unit,json=quantityPerUnit" json:"quantity_per_unit,omitempty"`
	UnitPrice       float32              `protobuf:"fixed32,6,opt,name=unit_price,json=unitPrice" json:"unit_price,omitempty"`
	UnitsInStock    uint32               `protobuf:"varint,7,opt,name=units_in_stock,json=unitsInStock" json:"units_in_stock,omitempty"`
	UnitsOnOrder    uint32               `protobuf:"varint,8,opt,name=units_on_order,json=unitsOnOrder" json:"units_on_order,omitempty"`
	ReoderLevel     uint32               `protobuf:"varint,9,opt,name=reoder_level,json=reoderLevel" json:"reoder_level,omitempty"`
	Discontinued    bool                 `protobuf:"varint,10,opt,name=discontinued" json:"discontinued,omitempty"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Product) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetSupplier() *Supplier {
	if m != nil {
		return m.Supplier
	}
	return nil
}

func (m *Product) GetCategory() *northwind1.Category {
	if m != nil {
		return m.Category
	}
	return nil
}

func (m *Product) GetQuantityPerUnit() string {
	if m != nil {
		return m.QuantityPerUnit
	}
	return ""
}

func (m *Product) GetUnitPrice() float32 {
	if m != nil {
		return m.UnitPrice
	}
	return 0
}

func (m *Product) GetUnitsInStock() uint32 {
	if m != nil {
		return m.UnitsInStock
	}
	return 0
}

func (m *Product) GetUnitsOnOrder() uint32 {
	if m != nil {
		return m.UnitsOnOrder
	}
	return 0
}

func (m *Product) GetReoderLevel() uint32 {
	if m != nil {
		return m.ReoderLevel
	}
	return 0
}

func (m *Product) GetDiscontinued() bool {
	if m != nil {
		return m.Discontinued
	}
	return false
}

func init() {
	proto.RegisterType((*Product)(nil), "northwind.Product")
}

func init() { proto.RegisterFile("product.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 301 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x49, 0xac, 0x6d, 0xb3, 0xfd, 0x23, 0xae, 0x08, 0x4b, 0x41, 0x88, 0xc5, 0x43, 0xf0,
	0xd0, 0x82, 0x3e, 0x82, 0x27, 0x41, 0x68, 0x49, 0xf1, 0xbc, 0xc4, 0xec, 0xa0, 0x83, 0x75, 0x36,
	0x4e, 0x36, 0x4a, 0x1f, 0xda, 0x77, 0x90, 0xdd, 0x34, 0x55, 0xf1, 0x94, 0xcc, 0xef, 0xfb, 0xcd,
	0xf0, 0xb1, 0x62, 0x52, 0xb1, 0x35, 0x4d, 0xe9, 0x16, 0x15, 0x5b, 0x67, 0x65, 0x42, 0x96, 0xdd,
	0xcb, 0x27, 0x92, 0x99, 0x9d, 0x17, 0xec, 0xb0, 0x2e, 0x68, 0xb9, 0xff, 0xb6, 0xc6, 0x6c, 0x5a,
	0x16, 0x0e, 0x9e, 0x2d, 0xef, 0xba, 0xb9, 0x6e, 0xaa, 0x6a, 0x8b, 0xc0, 0xed, 0x3c, 0xff, 0x8a,
	0xc5, 0x60, 0xdd, 0xde, 0x94, 0x53, 0x11, 0xa3, 0x51, 0x51, 0x1a, 0x65, 0x49, 0x1e, 0xa3, 0x91,
	0x52, 0xf4, 0xa8, 0x78, 0x03, 0x15, 0x07, 0x12, 0xfe, 0xe5, 0x52, 0x0c, 0xbb, 0x0b, 0xea, 0x28,
	0x8d, 0xb2, 0xd1, 0xcd, 0xd9, 0xe2, 0x50, 0x62, 0xb1, 0xd9, 0x47, 0xf9, 0x41, 0xf2, 0x0b, 0x5d,
	0x05, 0xd5, 0xfb, 0xb7, 0x70, 0xb7, 0x8f, 0xf2, 0x83, 0x24, 0xaf, 0xc5, 0xe9, 0x7b, 0x53, 0x90,
	0x43, 0xb7, 0xd3, 0x15, 0xb0, 0x6e, 0x08, 0x9d, 0x3a, 0x0e, 0x15, 0x4e, 0xba, 0x60, 0x0d, 0xfc,
	0x48, 0xe8, 0xe4, 0x85, 0x10, 0x3e, 0xd6, 0x15, 0x63, 0x09, 0xaa, 0x9f, 0x46, 0x59, 0x9c, 0x27,
	0x9e, 0xac, 0x3d, 0x90, 0x57, 0x62, 0xea, 0x87, 0x5a, 0x23, 0xe9, 0xda, 0xd9, 0xf2, 0x55, 0x0d,
	0xd2, 0x28, 0x9b, 0xe4, 0xe3, 0x40, 0xef, 0x69, 0xe3, 0xd9, 0x8f, 0x65, 0x49, 0x5b, 0x36, 0xc0,
	0x6a, 0xf8, 0xcb, 0x5a, 0xd1, 0xca, 0x33, 0x79, 0x29, 0xc6, 0x0c, 0xd6, 0x00, 0xeb, 0x2d, 0x7c,
	0xc0, 0x56, 0x25, 0xc1, 0x19, 0xb5, 0xec, 0xc1, 0x23, 0x39, 0x17, 0x63, 0x83, 0x75, 0x69, 0xc9,
	0x21, 0x35, 0x60, 0x94, 0x48, 0xa3, 0x6c, 0x98, 0xff, 0x61, 0x4f, 0xfd, 0xf0, 0xec, 0xb7, 0xdf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x9a, 0xc1, 0x8f, 0xc7, 0xc9, 0x01, 0x00, 0x00,
}
