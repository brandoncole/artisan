// Code generated by protoc-gen-go.
// source: customer.proto
// DO NOT EDIT!

/*
Package northwind is a generated protocol buffer package.

It is generated from these files:
	customer.proto
	employee.proto
	image.proto
	order.proto
	product.proto
	region.proto
	shipper.proto
	supplier.proto
	territory.proto

It has these top-level messages:
	Customer
	CustomerFK
	Employee
	EmployeeFK
	Image
	ImageFK
	Order
	OrderItem
	Product
	Region
	RegionFK
	Shipper
	ShipperFK
	Supplier
	SupplierFK
	Territory
*/
package northwind

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "artisan"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Customer struct {
	Id           string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ContactName  string `protobuf:"bytes,3,opt,name=contact_name,json=contactName" json:"contact_name,omitempty"`
	ContactTitle string `protobuf:"bytes,4,opt,name=contact_title,json=contactTitle" json:"contact_title,omitempty"`
	Address      string `protobuf:"bytes,5,opt,name=address" json:"address,omitempty"`
	City         string `protobuf:"bytes,6,opt,name=city" json:"city,omitempty"`
	Region       string `protobuf:"bytes,7,opt,name=region" json:"region,omitempty"`
	PostalCode   string `protobuf:"bytes,8,opt,name=postal_code,json=postalCode" json:"postal_code,omitempty"`
	Country      string `protobuf:"bytes,9,opt,name=country" json:"country,omitempty"`
	Phone        string `protobuf:"bytes,10,opt,name=phone" json:"phone,omitempty"`
	Fax          string `protobuf:"bytes,11,opt,name=fax" json:"fax,omitempty"`
	Email        string `protobuf:"bytes,12,opt,name=email" json:"email,omitempty"`
}

func (m *Customer) Reset()                    { *m = Customer{} }
func (m *Customer) String() string            { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()               {}
func (*Customer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Customer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Customer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Customer) GetContactName() string {
	if m != nil {
		return m.ContactName
	}
	return ""
}

func (m *Customer) GetContactTitle() string {
	if m != nil {
		return m.ContactTitle
	}
	return ""
}

func (m *Customer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Customer) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Customer) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Customer) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Customer) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Customer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Customer) GetFax() string {
	if m != nil {
		return m.Fax
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CustomerFK struct {
	// Types that are valid to be assigned to Customer:
	//	*CustomerFK_Id
	//	*CustomerFK_Instance
	Customer isCustomerFK_Customer `protobuf_oneof:"customer"`
}

func (m *CustomerFK) Reset()                    { *m = CustomerFK{} }
func (m *CustomerFK) String() string            { return proto.CompactTextString(m) }
func (*CustomerFK) ProtoMessage()               {}
func (*CustomerFK) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isCustomerFK_Customer interface {
	isCustomerFK_Customer()
}

type CustomerFK_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,oneof"`
}
type CustomerFK_Instance struct {
	Instance *Customer `protobuf:"bytes,2,opt,name=instance,oneof"`
}

func (*CustomerFK_Id) isCustomerFK_Customer()       {}
func (*CustomerFK_Instance) isCustomerFK_Customer() {}

func (m *CustomerFK) GetCustomer() isCustomerFK_Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *CustomerFK) GetId() string {
	if x, ok := m.GetCustomer().(*CustomerFK_Id); ok {
		return x.Id
	}
	return ""
}

func (m *CustomerFK) GetInstance() *Customer {
	if x, ok := m.GetCustomer().(*CustomerFK_Instance); ok {
		return x.Instance
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CustomerFK) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CustomerFK_OneofMarshaler, _CustomerFK_OneofUnmarshaler, _CustomerFK_OneofSizer, []interface{}{
		(*CustomerFK_Id)(nil),
		(*CustomerFK_Instance)(nil),
	}
}

func _CustomerFK_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CustomerFK)
	// customer
	switch x := m.Customer.(type) {
	case *CustomerFK_Id:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *CustomerFK_Instance:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Instance); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CustomerFK.Customer has unexpected type %T", x)
	}
	return nil
}

func _CustomerFK_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CustomerFK)
	switch tag {
	case 1: // customer.id
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Customer = &CustomerFK_Id{x}
		return true, err
	case 2: // customer.instance
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Customer)
		err := b.DecodeMessage(msg)
		m.Customer = &CustomerFK_Instance{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CustomerFK_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CustomerFK)
	// customer
	switch x := m.Customer.(type) {
	case *CustomerFK_Id:
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *CustomerFK_Instance:
		s := proto.Size(x.Instance)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*Customer)(nil), "northwind.Customer")
	proto.RegisterType((*CustomerFK)(nil), "northwind.CustomerFK")
}

func init() { proto.RegisterFile("customer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0xcd, 0x4a, 0x33, 0x31,
	0x14, 0x86, 0x3b, 0xd3, 0xbf, 0xe9, 0x99, 0x7e, 0x1f, 0x12, 0x7f, 0x38, 0x14, 0x11, 0xa9, 0x88,
	0xae, 0x2a, 0xea, 0x1d, 0xb4, 0x20, 0x05, 0xc1, 0xc5, 0xe0, 0x56, 0x4a, 0x4c, 0xa2, 0x0d, 0xb4,
	0x49, 0xc9, 0xa4, 0x68, 0x77, 0x2e, 0xbd, 0x21, 0xf7, 0x5e, 0x8a, 0xb7, 0x20, 0xde, 0x80, 0x24,
	0x99, 0xd4, 0x59, 0x0d, 0xf3, 0xbc, 0xcf, 0x0b, 0xe1, 0x3d, 0xf0, 0x9f, 0xad, 0x4b, 0xab, 0x97,
	0xc2, 0x8c, 0x56, 0x46, 0x5b, 0x4d, 0x7a, 0x4a, 0x1b, 0x3b, 0x7f, 0x91, 0x8a, 0x0f, 0xf6, 0xa9,
	0xb1, 0xb2, 0xa4, 0xea, 0xa2, 0xfa, 0x06, 0x63, 0xf8, 0x9d, 0x42, 0x36, 0xa9, 0x4a, 0x64, 0x0f,
	0x52, 0xc9, 0x31, 0x39, 0x4e, 0xce, 0x7b, 0xe3, 0xd6, 0xdb, 0x07, 0x26, 0x45, 0x2a, 0x39, 0x41,
	0x68, 0x29, 0xba, 0x14, 0x98, 0x06, 0xfe, 0xee, 0xb8, 0x27, 0xe4, 0x0c, 0xfa, 0x4c, 0x2b, 0x4b,
	0x99, 0x9d, 0x79, 0xa3, 0x59, 0x33, 0xf2, 0x2a, 0xb9, 0x73, 0xe2, 0x09, 0xfc, 0x8b, 0xa2, 0x95,
	0x76, 0x21, 0xb0, 0xe5, 0xcc, 0x22, 0xb6, 0xef, 0x1d, 0x23, 0x08, 0x5d, 0xca, 0xb9, 0x11, 0x65,
	0x89, 0x6d, 0x1f, 0xc7, 0x5f, 0xf7, 0x02, 0x26, 0xed, 0x06, 0x3b, 0xf5, 0x17, 0x38, 0x42, 0x0e,
	0xa1, 0x63, 0xc4, 0xb3, 0xd4, 0x0a, 0xbb, 0xb5, 0xac, 0x62, 0xe4, 0x14, 0xf2, 0x95, 0x2e, 0x2d,
	0x5d, 0xcc, 0x98, 0xe6, 0x02, 0xb3, 0x9a, 0x02, 0x21, 0x98, 0x68, 0x2e, 0xc8, 0x11, 0x74, 0x99,
	0x5e, 0x2b, 0x6b, 0x36, 0xd8, 0xab, 0x29, 0x11, 0x92, 0x01, 0xb4, 0x57, 0x73, 0xad, 0x04, 0x42,
	0x48, 0xbf, 0x7e, 0x30, 0x29, 0x02, 0x22, 0x07, 0xd0, 0x7c, 0xa2, 0xaf, 0x98, 0xd7, 0x12, 0x07,
	0x5c, 0x47, 0x2c, 0xa9, 0x5c, 0x60, 0x3f, 0x24, 0x9f, 0xbe, 0xe3, 0xd1, 0xf0, 0x01, 0x20, 0x4e,
	0x7e, 0x73, 0x4b, 0x76, 0xfe, 0x46, 0x9f, 0x36, 0xfc, 0xe0, 0x97, 0x90, 0x49, 0x55, 0x5a, 0xaa,
	0x58, 0x18, 0x3d, 0xbf, 0xda, 0x1d, 0x6d, 0x0f, 0x39, 0x8a, 0xd5, 0x69, 0xa3, 0xd8, 0x6a, 0x63,
	0x80, 0x2c, 0x9e, 0xfe, 0xb1, 0xe3, 0x2f, 0x7b, 0xfd, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x05, 0xf6,
	0xa8, 0x3c, 0x0d, 0x02, 0x00, 0x00,
}
